PROMPT_DEFAULT = "$ "

function change_directory(path)
    if chdir(path) != 0
        print("cd: ", path, ": ", strerror(errno))
        return -1
    end if
    return 0
end function

function print_working_directory()
    cwd = getcwd(NULL, 0)
    if cwd == NULL
        print("pwd: ", strerror(errno))
        return -1
    end if
    print(cwd)
    free(cwd)
    return 0
end function

function is_builtin_command(cmd)
    return strcmp(cmd.argv[0], "cd") == 0 or
           strcmp(cmd.argv[0], "pwd") == 0 or
           strcmp(cmd.argv[0], "exit") == 0 or
           strcmp(cmd.argv[0], "prompt") == 0
end function

function execute_builtin_command(cmd)
    if strcmp(cmd.argv[0], "cd") == 0
        return change_directory(cmd.argv[1] ? cmd.argv[1] : getenv("HOME"))
    else if strcmp(cmd.argv[0], "pwd") == 0
        return print_working_directory()
    else if strcmp(cmd.argv[0], "exit") == 0
        exit(0)
    else if strcmp(cmd.argv[0], "prompt") == 0
        if cmd.argv[1]
            set_prompt(cmd.argv[1])
        else
            set_prompt(PROMPT_DEFAULT)
        end if
        return 0
    end if
    return -1
end function

function execute_command(cmd)
    if is_builtin_command(cmd)
        return execute_builtin_command(cmd)
    end if

    pid = fork()
    if pid == -1
        print("Failed to fork: ", strerror(errno))
        return -1
    end if

    if pid == 0
        if cmd.input_redir
            fd = open(cmd.input_redir, O_RDONLY)
            if fd == -1
                print("Failed to open input file: ", strerror(errno))
                exit(1)
            end if
            dup2(fd, STDIN_FILENO)
            close(fd)
        end if

        if cmd.output_redir
            fd = open(cmd.output_redir, O_WRONLY | O_CREAT | O_TRUNC, 0644)
            if fd == -1
                print("Failed to open output file: ", strerror(errno))
                exit(1)
            end if
            dup2(fd, STDOUT_FILENO)
            close(fd)
        end if

        execvp(cmd.argv[0], cmd.argv)
        print("Failed to execute command: ", cmd.argv[0], ": ", strerror(errno))
        exit(1)
    end if

    return pid
end function

function free_command(
if !cmd
return
end if
for i = 0 to length of cmd.argv
    free(cmd.argv[i])
end for

free(cmd.input_redir)
free(cmd.output_redir)
free(cmd.argv)
free(cmd)
)
